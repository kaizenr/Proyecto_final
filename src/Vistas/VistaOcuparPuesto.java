/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import Controladores.ControladorVentanaOcuparPuesto;
import Modelos.Puesto;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Nicolas & Jeison
 */
public class VistaOcuparPuesto extends javax.swing.JFrame implements ActionListener {

    JButton[][] botones;
    private final ControladorVentanaOcuparPuesto controlador;
    
    /**
     * Creates new form VistaOcuparPuesto
     */
    public VistaOcuparPuesto() {
        initComponents();
        botones = new JButton[4][6]; 
        controlador = new ControladorVentanaOcuparPuesto();
        cargarBotones();
        validarPosiciones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        panelBotones = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelBotones.setBackground(new java.awt.Color(0, 0, 153));

        javax.swing.GroupLayout panelBotonesLayout = new javax.swing.GroupLayout(panelBotones);
        panelBotones.setLayout(panelBotonesLayout);
        panelBotonesLayout.setHorizontalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );
        panelBotonesLayout.setVerticalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 302, Short.MAX_VALUE)
        );

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));

        jMenu1.setBackground(new java.awt.Color(0, 0, 153));
        jMenu1.setForeground(new java.awt.Color(0, 0, 153));
        jMenu1.setText("Regresar");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        this.dispose();
        JFrame v2 = new VistaPrincipal();
        v2.setVisible(true);
    }//GEN-LAST:event_jMenu1MouseClicked

    private void cargarBotones() {
    int ancho = 55;
    int alto = 55;
    int separado = 20;
    int separadoAlt = 20;
    int texto = 1;

    for (int i = 0; i < botones.length; i++) {
        for (int j = 0; j < botones[i].length; j++) {
            botones[i][j] = new JButton();
            if (texto == 6 || texto == 12 || texto == 18 || texto == 24) {
                separado += 40; 
            }else if (texto >= 13 && texto <= 17) {
                separadoAlt = 50; 
            }
            botones[i][j].setBounds(
                (j * ancho + separado),
                (i * alto + separadoAlt),
                ancho, alto);
            botones[i][j].setText(String.valueOf(texto));
            botones[i][j].addActionListener(this);
            panelBotones.add(botones[i][j]);
            texto++;
        }
        separado = 20;
        separadoAlt += 7;
        }
    }
    
    public void actionPerformed(ActionEvent ae) {
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                if (ae.getSource().equals(botones[i][j])) {
                    Puesto puesto = controlador.obtenerCasilla(i, j);
                    if (puesto.getEstado().equals(Puesto.DESOCUPADO)) {
                        procesarCasillaDisponible(i, j, puesto);
                    } else if (puesto.getEstado().equals(Puesto.OCUPADO)) {
                        abrirVentanaMenu(i, j, puesto);               
                    }
                }
            }
        }
        validarPosiciones();
    }

    private void abrirVentanaMenu(int fila, int columna, Puesto puesto) {
        VentanaMenuInformacion ventana = new VentanaMenuInformacion(fila, columna, puesto);
        ventana.setVisible(true);
        this.dispose();
    }
    
    private void procesarCasillaDisponible(int fila, int columna, Puesto puesto) {
        String[] opciones = {"Ocupar por moto", "Ocupar por carro", "Cancelar"};
        int op = JOptionPane.showOptionDialog(this, "Elige una opción", "Acción", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opciones, null);
        if (op == 0) {
            VistaOcuparNuevoPuestoMoto ventana = new VistaOcuparNuevoPuestoMoto(fila, columna, Short.parseShort(botones[fila][columna].getText()));
            ventana.setVisible(true);
            this.dispose();
        }else if(op == 1){
            VistaOcuparNuevoPuestoCarro ventana = new VistaOcuparNuevoPuestoCarro(fila, columna, Short.parseShort(botones[fila][columna].getText()));
            ventana.setVisible(true);
            this.dispose();
        }else {
        }
    }

    public void validarPosiciones() {
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                Puesto puesto = controlador.obtenerCasilla(i, j);
                Color colorFondo;
                Color colorTexto = Color.BLACK;

                if (puesto.getEstado().equals(Puesto.DESOCUPADO)) {
                    colorFondo = Color.WHITE;
                }else {
                    colorFondo = new Color(72, 149,239);
                }
                botones[i][j].setBackground(colorFondo);
                botones[i][j].setForeground(colorTexto);
            }
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel panelBotones;
    // End of variables declaration//GEN-END:variables
}
